// <auto-generated />
using System;
using LaMa.Via.Auctus.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LaMa.Via.Auctus.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationWriteDbContext))]
    [Migration("20241120221836_InitialCarManagementSeedData")]
    partial class InitialCarManagementSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("via_auctus")
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EngineId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uuid");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<Guid>("VersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("EngineId");

                    b.HasIndex("ModelId");

                    b.HasIndex("VersionId");

                    b.ToTable("Cars", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("CarBrands", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarBrandId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.HasIndex("CarBrandId");

                    b.ToTable("CarModels", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarModelVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CarModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CarModelId");

                    b.ToTable("CarModelVersions", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.Engine", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("FuelTypeId")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("HorsePower")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("Torque")
                        .HasColumnType("integer");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.HasIndex("FuelTypeId");

                    b.ToTable("Engines", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.FuelType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<uint>("Version")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("xid")
                        .HasColumnName("xmin");

                    b.HasKey("Id");

                    b.ToTable("FuelTypes", "via_auctus");

                    b.HasData(
                        new
                        {
                            Id = "Gasoline"
                        },
                        new
                        {
                            Id = "Diesel"
                        },
                        new
                        {
                            Id = "Compressed Natural Gas (CNG)"
                        },
                        new
                        {
                            Id = "Liquefied Natural Gas (LNG)"
                        },
                        new
                        {
                            Id = "Liquefied Petroleum Gas (LPG)"
                        },
                        new
                        {
                            Id = "Ethanol"
                        },
                        new
                        {
                            Id = "Biodiesel"
                        },
                        new
                        {
                            Id = "Hydrogen Fuel Cell"
                        },
                        new
                        {
                            Id = "Electric"
                        },
                        new
                        {
                            Id = "Hybrid"
                        },
                        new
                        {
                            Id = "Plug-in Hybrid"
                        },
                        new
                        {
                            Id = "Propane"
                        });
                });

            modelBuilder.Entity("ModelVersionEngines", b =>
                {
                    b.Property<Guid>("EngineId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ModelVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("EngineId", "ModelVersionId");

                    b.HasIndex("ModelVersionId");

                    b.ToTable("ModelVersionEngines", "via_auctus");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.Car", b =>
                {
                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarBrand", null)
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.Engine", null)
                        .WithMany()
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarModel", null)
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarModelVersion", null)
                        .WithMany()
                        .HasForeignKey("VersionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LaMa.Via.Auctus.Domain.CarManagement.CarRegistration", "Registration", b1 =>
                        {
                            b1.Property<Guid>("CarId")
                                .HasColumnType("uuid");

                            b1.Property<DateOnly>("FirstRegistrationDate")
                                .HasColumnType("date");

                            b1.Property<string>("LicensePlate")
                                .IsRequired()
                                .HasMaxLength(30)
                                .HasColumnType("character varying(30)");

                            b1.Property<DateOnly>("RegistrationExpiryDate")
                                .HasColumnType("date");

                            b1.HasKey("CarId");

                            b1.ToTable("Cars", "via_auctus");

                            b1.WithOwner()
                                .HasForeignKey("CarId");
                        });

                    b.Navigation("Registration");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarBrand", b =>
                {
                    b.OwnsOne("LaMa.Via.Auctus.Domain.CarManagement.CarBrandTheme", "Theme", b1 =>
                        {
                            b1.Property<Guid>("CarBrandId")
                                .HasColumnType("uuid");

                            b1.Property<string>("FontFamily")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("CarBrandId");

                            b1.ToTable("CarBrands", "via_auctus");

                            b1.WithOwner()
                                .HasForeignKey("CarBrandId");

                            b1.OwnsOne("LaMa.Via.Auctus.Domain.Shared.CssColor", "PrimaryColor", b2 =>
                                {
                                    b2.Property<Guid>("CarBrandThemeCarBrandId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("Theme_PrimaryColor");

                                    b2.HasKey("CarBrandThemeCarBrandId");

                                    b2.ToTable("CarBrands", "via_auctus");

                                    b2.WithOwner()
                                        .HasForeignKey("CarBrandThemeCarBrandId");
                                });

                            b1.OwnsOne("LaMa.Via.Auctus.Domain.Shared.CssColor", "SecondaryColor", b2 =>
                                {
                                    b2.Property<Guid>("CarBrandThemeCarBrandId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasMaxLength(30)
                                        .HasColumnType("character varying(30)")
                                        .HasColumnName("Theme_SecondaryColor");

                                    b2.HasKey("CarBrandThemeCarBrandId");

                                    b2.ToTable("CarBrands", "via_auctus");

                                    b2.WithOwner()
                                        .HasForeignKey("CarBrandThemeCarBrandId");
                                });

                            b1.OwnsOne("LaMa.Via.Auctus.Domain.Shared.SvgImage", "Logo", b2 =>
                                {
                                    b2.Property<Guid>("CarBrandThemeCarBrandId")
                                        .HasColumnType("uuid");

                                    b2.Property<string>("Url")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasColumnName("Theme_LogoUrl");

                                    b2.HasKey("CarBrandThemeCarBrandId");

                                    b2.ToTable("CarBrands", "via_auctus");

                                    b2.WithOwner()
                                        .HasForeignKey("CarBrandThemeCarBrandId");
                                });

                            b1.Navigation("Logo")
                                .IsRequired();

                            b1.Navigation("PrimaryColor")
                                .IsRequired();

                            b1.Navigation("SecondaryColor");
                        });

                    b.Navigation("Theme")
                        .IsRequired();
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarModel", b =>
                {
                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarBrand", null)
                        .WithMany()
                        .HasForeignKey("CarBrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LaMa.Via.Auctus.Domain.Shared.SupportedImage", "Image", b1 =>
                        {
                            b1.Property<Guid>("CarModelId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ImageUrl");

                            b1.HasKey("CarModelId");

                            b1.ToTable("CarModels", "via_auctus");

                            b1.WithOwner()
                                .HasForeignKey("CarModelId");
                        });

                    b.Navigation("Image");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.CarModelVersion", b =>
                {
                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarModel", null)
                        .WithMany()
                        .HasForeignKey("CarModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("LaMa.Via.Auctus.Domain.Shared.SupportedImage", "Image", b1 =>
                        {
                            b1.Property<Guid>("CarModelVersionId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Url")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("ImageUrl");

                            b1.HasKey("CarModelVersionId");

                            b1.ToTable("CarModelVersions", "via_auctus");

                            b1.WithOwner()
                                .HasForeignKey("CarModelVersionId");
                        });

                    b.Navigation("Image");
                });

            modelBuilder.Entity("LaMa.Via.Auctus.Domain.CarManagement.Engine", b =>
                {
                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("LaMa.Via.Auctus.Domain.CarManagement.EngineEfficiency", "Efficiency", b1 =>
                        {
                            b1.Property<Guid>("EngineId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("EngineEfficiencyUnit");

                            b1.Property<decimal>("Value")
                                .HasColumnType("numeric")
                                .HasColumnName("EngineEfficiencyValue");

                            b1.HasKey("EngineId");

                            b1.ToTable("Engines", "via_auctus");

                            b1.WithOwner()
                                .HasForeignKey("EngineId");
                        });

                    b.Navigation("Efficiency")
                        .IsRequired();

                    b.Navigation("FuelType");
                });

            modelBuilder.Entity("ModelVersionEngines", b =>
                {
                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.Engine", null)
                        .WithMany()
                        .HasForeignKey("EngineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaMa.Via.Auctus.Domain.CarManagement.CarModelVersion", null)
                        .WithMany()
                        .HasForeignKey("ModelVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
